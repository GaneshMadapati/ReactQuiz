{"version":3,"sources":["components/quizData.js","components/MainQuiz.js","index.js"],"names":["QuizData","id","question","options","answer","MainQuiz","props","loadQuiz","currentIndex","state","setState","nextQuestionHander","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","this","prevProps","prevState","map","item","index","className","key","option","onClick","React","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2MAAaA,EAAW,CAErB,CAAEC,GAAI,EACLC,SAAS,kCACTC,QAAS,CAAC,YAAD,gCACTC,OAAO,aAGT,CACEH,GAAI,EACJC,SAAS,kCACTC,QAAS,CAAC,aAAD,yBAAyC,cAClDC,OAAO,aAGT,CACIH,GAAI,EACJC,SAAS,oCACTC,QAAS,CAAC,SAAD,0BACTC,OAAO,UAGX,CACEH,GAAI,EACJC,SAAS,4BACTC,QAAS,CAAC,YAAD,yCACTC,OAAO,aAET,CACEH,GAAI,EACJC,SAAS,yBACTC,QAAS,CAAC,aAAD,gCAAgD,eACzDC,OAAO,eCkIIC,G,wDA5Jb,WAAYC,GACX,IAAD,8BACE,cAAMA,IAaVC,SAAW,WAAO,IACTC,EAAgB,EAAKC,MAArBD,aACP,EAAKE,UAAS,WACV,MAAO,CACHR,SAAUF,EAASQ,GAAcN,SACjCC,QAAUH,EAASQ,GAAcL,QACjCC,OAAQJ,EAASQ,GAAcJ,YApBvC,EA2BFO,mBAAqB,WAAO,IAAD,EACW,EAAKF,MAAlCG,EADkB,EAClBA,WAAYR,EADM,EACNA,OAAQS,EADF,EACEA,MAC3B,EAAKH,SAAS,CACVF,aAAc,EAAKC,MAAMD,aAAe,IAIzCI,IAAeR,GACd,EAAKM,SAAS,CACVG,MAAOA,EAAQ,KApCvB,EA8CFC,YAAc,SAAAV,GACZ,EAAKM,SAAS,CACVE,WAAYR,EACZW,UAAS,KAjDb,EAyEFC,cAAe,WACV,EAAKP,MAAMD,eAAiBR,EAASiB,OAAQ,GAC5C,EAAKP,SAAS,CACVQ,SAAQ,KAzEd,EAAKT,MAAM,CACTG,WAAW,KACbJ,aAAa,EACbL,QAAS,GACTe,SAAS,EACTL,MAAO,EACPE,UAAU,GATZ,E,gEA0CAI,KAAKZ,a,yCAYYa,EAAWC,GAAW,IACjCb,EAAgBW,KAAKV,MAArBD,aACHW,KAAKV,MAAMD,eAAiBa,EAAUb,cACrCW,KAAKT,UAAS,WACV,MAAO,CACHK,UAAU,EACVb,SAAUF,EAASQ,GAAcN,SACjCC,QAAUH,EAASQ,GAAcL,QACjCC,OAAQJ,EAASQ,GAAcJ,a,+BAoBjC,IAAD,SAEgDe,KAAKV,MAAvDP,EAFE,EAEFA,SAASC,EAFP,EAEOA,QAAQK,EAFf,EAEeA,aAAaI,EAF5B,EAE4BA,WAElC,OAJM,EAEuCM,QAKzC,6BACG,6DAAmCC,KAAKV,MAAMI,MAA9C,cAAgEb,EAASiB,OAAzE,KACA,sEACF,6BACC,4BAEIjB,EAASsB,KAAI,SAACC,EAAKC,GAAN,OACX,wBAAIC,UAAU,UAAUC,IAAKF,GAEzBD,EAAKrB,SAKLqB,EAAKnB,cAYnB,6BACC,4BAAKF,GACL,sDAAqBM,EAAe,EAApC,eAA4CR,EAASiB,QAArD,KAECd,EAAQmB,KAAI,SAAAK,GAAM,OAClB,uBAAGD,IAAKC,EAAO1B,GAAIwB,UAAS,kBAAcb,IAAae,EAAS,WAAY,KAAhD,KAC5BC,QAAS,kBAAI,EAAKd,YAAYa,KAEtBA,MAOPnB,EAAaR,EAASiB,OAAO,GAC7B,4BAAQF,SAAUI,KAAKV,MAAMM,SAAUa,QAAST,KAAKR,oBAArD,QAQAH,IAAeR,EAASiB,OAAO,GAC/B,4BAAQW,QAAST,KAAKH,cACtBD,SAAUI,KAAKV,MAAMM,UADrB,e,GA/Iac,IAAMC,YCE7B,SAASC,IACP,OACE,6BACE,kBAAC,EAAD,OAKN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAACL,EAAD,MAASC,I","file":"static/js/main.56a2ad5d.chunk.js","sourcesContent":["export const QuizData = [\n   \n   { id: 0,\n    question: ` What is the Capital Of India ?`,\n    options: [`New Delhi`, `Mumbai`, `Kolkatta`,`Hyderbad`],\n    answer: `New Delhi`\n  },\n\n  {\n    id: 1,\n    question: `Who is the CEO of Tesla Motors?`,\n    options: [`Bill Gates`, `Steve Jobs`, `Elon Musk`,'Ratan Tata'],\n    answer: `Elon Musk`\n  },\n\n  {\n      id: 2,\n      question: `What is the capital of Australia?`,\n      options: [`Mumbai`, `Abuja`, `Warri`, `Sydney`],\n      answer: `Sydney`\n  },\n\n  {\n    id: 3,\n    question: `Name World's Richest Man?`,\n    options: [`Jeff Bezo`, `Bill Gates`, `Mark Zuckerberg`,`Ambani`],\n    answer: `Jeff Bezo`\n  },\n  {\n    id: 4,\n    question: `World's Longest River?`,\n    options: [`River Nile`, `River Amazon`, `River Godavari`,'River Ganga'],\n    answer: `River Nile`\n  }\n]","import React from \"react\";\nimport { QuizData } from \"./quizData\";\nimport \"./styles.css\";\n\nclass MainQuiz extends React.Component {\n\n  constructor(props)\n  {\n    super(props);\n\n    this.state={\n      userAnswer:null,    //current users answer\n    currentIndex:0,  //current questions index\n    options: [],       //the four options\n    quizEnd: false, //True if it's the last question\n    score: 0,      //the Score\n    disabled: true,\n    }\n  }\n \n  //Component that holds the current quiz\nloadQuiz = () => {\n  const {currentIndex} = this.state //get the current index\n  this.setState(() => {\n      return {\n          question: QuizData[currentIndex].question,\n          options : QuizData[currentIndex].options,\n          answer: QuizData[currentIndex].answer          \n      }\n  }\n  )\n}\n\n//Handles Click event for the next button\nnextQuestionHander = () => {\n  const {userAnswer, answer, score} = this.state\n  this.setState({\n      currentIndex: this.state.currentIndex + 1\n  })\n\n  //Check for correct answer and increment score\n  if(userAnswer === answer){\n      this.setState({\n          score: score + 1\n      })\n  }\n}\n//Load the quiz once the component mounts\ncomponentDidMount(){\n  this.loadQuiz();\n}\n\n//Check the answer\ncheckAnswer = answer => {\n  this.setState({\n      userAnswer: answer,\n      disabled:false\n  })\n}\n\n//Update the component\ncomponentDidUpdate(prevProps, prevState){\n  const{currentIndex} = this.state;\n  if(this.state.currentIndex !== prevState.currentIndex){\n      this.setState(() => {\n          return {\n              disabled: true,\n              question: QuizData[currentIndex].question,\n              options : QuizData[currentIndex].options,\n              answer: QuizData[currentIndex].answer          \n          }\n      });\n\n  }\n}\n\n  \n \n\n//Responds to the click of the finish button\nfinishHandler =() => {\n  if(this.state.currentIndex === QuizData.length -1){\n      this.setState({\n          quizEnd:true\n      })\n  }\n\n}\n\n  render() {\n   \n   const{question,options,currentIndex,userAnswer,quizEnd}=this.state;\n\n     if(quizEnd)\n     {\n       return(\n         <div>\n            <h3>Game Over your Final score is {this.state.score} points of {QuizData.length} </h3>\n            <p> The correct answer's for the quiz are </p>\n          <div>\n           <ul>\n             {\n               QuizData.map((item,index)=>(\n                 <li className=\"options\" key={index}>\n                   {\n                     item.question\n                   }\n                   \n\n                   {\n                     item.answer\n                   }\n                 </li>\n               ))\n             }\n           </ul>\n          </div>\n         </div>\n       )\n     }\n     \n      return (\n       <div>\n        <h2>{question}</h2>\n        <span> {` Question ${currentIndex + 1} of ${QuizData.length}`} </span>\n       {\n         options.map(option=> \n         <p key={option.id} className={ `options ${userAnswer===option ? \"selected\": null } `}\n         onClick={()=>this.checkAnswer(option)}>\n\n                {option}\n\n         </p>\n         )\n       }\n\n        {\n          currentIndex<QuizData.length-1&&\n          <button disabled={this.state.disabled} onClick={this.nextQuestionHander} >\n            Next\n          </button>\n\n        }\n\n\n        {\n          currentIndex===QuizData.length-1&&\n          <button onClick={this.finishHandler}\n          disabled={this.state.disabled}>\n              finish\n          </button>\n\n        }\n       \n       </div>\n\n      )\n\n    }\n  }\n\n\nexport default MainQuiz;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nimport MainQuiz from \"./components/MainQuiz\";\n\nfunction App() {\n  return (\n    <div>\n      <MainQuiz />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}